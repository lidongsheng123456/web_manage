<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.example.system.mapper.AdminNoticeMapper">
    <insert id="addNotice">
        insert into notice
        <trim prefix="(" suffixOverrides="," suffix=")">
            <if test="noticeTitle != null &amp; noticeTitle != ''">notice_title,</if>
            <if test="noticeContent != null &amp; noticeContent != ''">notice_content,</if>
            <if test="createTime != null">create_time,</if>
            <if test="updateTime != null">update_time,</if>
            <if test="createUserId != null">create_user_id,</if>
        </trim>
        <trim prefix="values (" suffixOverrides="," suffix=")">
            <if test="noticeTitle != null &amp; noticeTitle != ''">#{noticeTitle},</if>
            <if test="noticeContent != null &amp; noticeContent != ''">#{noticeContent},</if>
            <if test="createTime != null">#{createTime},</if>
            <if test="updateTime != null">#{updateTime},</if>
            <if test="createUserId != null">#{createUserId},</if>
        </trim>
    </insert>

    <delete id="deleteNotice">
        delete
        from notice
        where id = #{id}
    </delete>

    <delete id="batchDeleteNotice">
        delete
        from notice
        where id in
        <foreach collection="list" open="(" separator="," close=")" item="ids">
            #{ids}
        </foreach>
    </delete>

    <delete id="deleteNoticeByUserId">
        delete
        from notice
        where create_user_id = #{id}
    </delete>

    <delete id="batchDeleteNoticeByUserIds">
        delete
        from notice
        where id in
        <foreach collection="list" open="(" separator="," close=")" item="ids">
            #{ids}
        </foreach>
    </delete>

    <update id="updateNotice">
        update notice
        <set>
            <if test="noticeTitle != null &amp; noticeTitle != ''">notice_title=#{noticeTitle},</if>
            <if test="noticeContent != null &amp; noticeContent != ''">notice_content=#{noticeContent},</if>
            <if test="createTime != null">create_time=#{createTime},</if>
            <if test="updateTime != null">update_time=#{updateTime},</if>
            <if test="createUserId != null">create_user_id=#{createUserId},</if>
        </set>
        where id=#{id}
    </update>

    <select id="queryNotice" resultType="com.example.system.domain.vo.NoticeVo">
        select
        notice.id,notice.notice_title,notice.notice_content,notice.create_time,notice.update_time,notice.create_user_id,User.username
        from
        notice
        join User on notice.create_user_id = User.id
        <trim prefix="where " prefixOverrides="and">
            <if test="noticeTitle != null &amp; noticeTitle != ''">and notice_title like
                concat('%',#{noticeTitle},'%')
            </if>
            <if test="noticeContent != null &amp; noticeContent != ''">and notice_content like
                concat('%',#{noticeContent},'%')
            </if>
            <if test="createTime != null">and create_time = #{createTime}</if>
            <if test="updateTime != null">and update_time #{updateTime}</if>
            <if test="createUserId != null">and create_user_id = #{createUserId}</if>
        </trim>
        order by id desc
    </select>

    <select id="queryAllNotice" resultType="com.example.system.domain.Notice">
        select *
        from notice
        order by id asc
    </select>

    <select id="queryNoticeById" resultType="com.example.system.domain.Notice">
        select *
        from notice
        where id = #{id}
    </select>
</mapper>
